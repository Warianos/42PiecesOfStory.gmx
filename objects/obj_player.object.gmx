<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_idle_walk_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>name = "Cagatacos#___________#"
nameSword = "Cometacos#___________#"
desc = "????#______#"
color = c_green;
txt="";

//global variable 
roomCleared      = false
roomSuperCleared = false
batatinhas = true;
flag = true;
caralho = false
menuOpened = false

//Change stance time variables
changeWepCooldownIni = 0;
changeWepCooldownFin = 0;
changeWepCooldown    = 0.2;

//dodge cooldown time variables
dodgeCooldownIni = 0;
dodgeCooldownFin = 0;
dodgeCooldown    = 5;
dodgeTime        = 0;
dodge            = true;

//special attack cooldown time variables
specialAttackTime        = 0;
specialAttackCooldownIni = 0;
specialAttackCooldownFin = 0;
specialAttackCooldown    = 1;
//attack = false;

//attack cooldown time variables
attackTime        = 0;
attackCooldownIni = 0;
attackCooldownFin = 0;
attackCooldown    = 0.5;

//stances
countStances = 0;
stances[0]   = "sword";
stances[1]   = "curvebow";
stances[2]   = "wand";
stance       = stances[0]
canUseBow    = true;
canUseStaff  = true;

//player variables
cutScene            = false;
flagCScene          = true;
realPlayerDirection = "down";
playerDirection     = "down";
pointerDirection    = "down";
pointerAng          = 0;
pixelToMove         = 4; 
fireballVel         = 10;
arrowVel            = 10;
animationSpeed      = 0.4;
talentPoint         = 1;
playerLevel         = 1;
actualExp           = 0;
expMax              = 10;
hp                  = player_hp_default;
invincibility       = false;
attacking           = false;
hidden              = false;
coins               = 100;
coin_caught         = false;

//attacking
numbArrows         = 0;
numbFireballs      = 0;
leftDiag           = 0;
rightDiag          = 0;
ability            = false;
abilityAgil        = false;
abilityInt         = false;
swordHold          = 0;
holding            = false;
canUseAbility      = true;
swordNormalAttack  = 1;
swordAbilityAttack = 3;

//check double keys
keyW = false;
keyA = false;
keyS = false;
keyD = false;

//music
//global.Music= audio_play_sound(main,0.5,true);
//audio_sound_gain(global.Music,0.1,0);

//menu
menuOpened = false;

//skill tree
strengthPointsSword     = 0
agilityPointsSword      = 0
intelligencePointsSword = 0
strengthPointsBow       = 0
agilityPointsBow        = 0
intelligencePointsBow   = 0
strengthPointsStaff     = 0
agilityPointsStaff      = 0
intelligencePointsStaff = 0

shieldOn        = false;
movementSpeedUp = false;
powerUpOn       = false;
attackSpeedUp   = false; 

pointsToAdd = 2



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>305</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_timeline_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>14</kind>
            <timeline>Cutscene_CH2_wakeUp</timeline>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>dark</sound>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invincibility = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>abilityAgil = false;
attacking = false;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//triggered after the player has been hit, reseting his invincibility to false
invincibility = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!menuOpened){


//playerÂ´s movement
if(room == 4 &amp;&amp; !instance_exists(obj_enemy) &amp;&amp; !roomCleared){
    roomCleared = true
    script_execute(getTimeline,Cutscene_CH1_room2,false)
    //roomCleared = false
}


if(room == 6 &amp;&amp; !instance_exists(obj_enemy) &amp;&amp; !roomSuperCleared){
    roomSuperCleared = true
    script_execute(getTimeline,Cutscene_CH1_room5_cat,false)
    //roomCleared = false
}
    
if(room == 7 &amp;&amp; !instance_exists(obj_enemy)){
    obj_warp_room01.areaUnlocked = true
}
if(room == 8 &amp;&amp; !instance_exists(obj_enemy)){
    obj_warp_room01.areaUnlocked = true
}

if(room == 6 &amp;&amp; !instance_exists(obj_enemy)){
    obj_warp_room01.areaUnlocked = true
}
if(room == 6 &amp;&amp; !instance_exists(obj_log) &amp;&amp; !caralho){
    script_execute(getTimeline, FinalDemo, false)
    caralho = true
}
if(room == 6 &amp;&amp; batatinhas){
    script_execute(getTimeline,Cutscene_CH1_room5,false)
    batatinhas = false
}

//Rooms bem feitas
show_debug_message(room);
if(room == 8 &amp;&amp; flag){
    script_execute(getTimeline,Cutscene_CH2_wakeUp,false)
    flag = false;
}

if(timeline_running == true){
    if (mouse_check_button_pressed(mb_left)){
        script_execute(FastText,obj_player,10);
        script_execute(FastText,obj_cry_girl,10);
        script_execute(FastText,obj_enemy_goblin,10);  
    }
}

//var img = asset_get_index("spr_walk_animation_" + string(playerDirection));
if(cutScene == false){
var time = get_timer()/1000000;
dodgeTime = get_timer()/1000000;
attackTime = get_timer()/1000000;
specialAttackTime = get_timer()/1000000;

pointerAng = point_direction(obj_player.x,obj_player.y,mouse_x,mouse_y); 

if(keyboard_check(ord("S"))){    
    keyS = true;
    script_execute(Walking,0,pixelToMove,"down","normal");
}else{keyS=false;}

if(keyboard_check(ord("W"))){
    keyW = true;
    script_execute(Walking,0,-pixelToMove,"up","normal");
}else{keyW=false;}

if(keyboard_check(ord("A"))){
    keyA=true;
    script_execute(Walking,-pixelToMove,0,"left","normal");
}else{keyA=false;}

if(keyboard_check(ord("D"))){
   keyD=true;
   script_execute(Walking,pixelToMove,0,"right","normal");
}else{keyD=false;}
if(keyboard_check(ord("P"))){    
    game_restart();

   
    
    
        
    //dodge
    if(keyboard_check(ord("Q")) &amp;&amp; dodge = true){
        
        if(dodgeTime &gt;= dodgeCooldownFin){
            dodgeCooldownIni = dodgeTime;
            dodgeCooldownFin = dodgeTime + dodgeCooldown;
            script_execute(Dodge,obj_player,realPlayerDirection,100)
            dodge = false;
        }
    }
    
    //clicar tecla para mudar de stance
    if(keyboard_check(ord("R"))){
        //script_execute(getTimeline,Cutscene_CH1_room5_cat,false);
        if(time &gt;= changeWepCooldownFin){
            changeWepCooldownIni = time;
            changeWepCooldownFin = time + changeWepCooldown; 
            countStances ++;
            stance = stances[countStances];
            if(stance == "curvebow" &amp;&amp; !canUseBow){
                countStances--;
                stance = stances[countStances]
            }else if(stance == "wand" &amp;&amp; !canUseStaff){
                countStances = 0;
                stance = stances[countStances]
            }
            
            if(countStances &gt; (array_length_1d(stances) - 1)) countStances = 0; 
        }
    }
    
    //player idle depende de stance para stance
    if((!keyboard_check(ord("W"))) &amp;&amp; (!keyboard_check(ord("S"))) &amp;&amp; (!keyboard_check(ord("A"))) &amp;&amp; (!keyboard_check(ord("D")))){ 
        
        script_execute(ImageOrientation);
        playerDirection =  pointerDirection;
        realPlayerDirection = playerDirection;
        if(!attacking){
            sprite_index = asset_get_index("spr_idle_" + string(stance) + "_" + string(playerDirection)); 
        }
    } 
    
    //Hide detection
    if(instance_exists(obj_enemy_wolf)){
        if(place_meeting(x,y,obj_rock)){
            obj_player.hidden=true;
            obj_enemy_wolf.state=enemy_state.stop;
           
        }
        else {
            obj_player.hidden=false;
            obj_enemy_wolf.state=enemy_state.chase;
        }
    }
    }
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!menuOpened){
    if(swordHold &lt; 10 &amp;&amp; !ability &amp;&amp; cutScene == false){
        attacking = true;
        script_execute(Attack,stance,playerDirection); 
    }
}
swordHold = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!menuOpened){
    swordHold++;
    
    if(swordHold &gt;= 30 &amp;&amp; stance ==  "sword" &amp;&amp; canUseAbility){
        ability =true;
        attacking =true;
    }
    
    if(ability){
        with instance_create(x,y,obj_sword_hit){
            image_xscale = obj_player.image_xscale;
        }
        obj_sword_hit.sprite_index = asset_get_index("spr_" + string(stance) + "_hit_" + string(playerDirection)); 
        sprite_index = asset_get_index("spr_" + string(stance) + "_animation_" + string(playerDirection)); 
        image_speed = 0.5;
        swordHold = 0;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(attacking &amp;&amp; !abilityAgil){
    attacking = false;
    ability = false;
    numbArrows = 0;
    numbFireballs = 0;

}
//stop special attacks
if(attacking &amp;&amp; abilityAgil &amp;&amp; alarm[1] = -1){
    alarm[1] = 10
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!menuOpened){
    if(cutScene == false){
        if(specialAttackTime &gt;= specialAttackCooldownFin){
                specialAttackCooldownIni = specialAttackTime;
                specialAttackCooldownFin = specialAttackTime + specialAttackCooldown;
        
        if (!(keyA &amp;&amp; keyS) &amp;&amp; !(keyA &amp;&amp; keyW) &amp;&amp; !(keyD &amp;&amp; keyS) &amp;&amp; !(keyD &amp;&amp; keyW) &amp;&amp; canUseAbility){
            ability = true;
            attacking = true;
        }
    
    if(ability){
        
        if(stance = "wand" &amp;&amp; obj_player.numbFireballs &lt; 1){
            script_execute(Ability,playerDirection);
            i = instance_create(obj_player.x, obj_player.y, obj_fireball)
            i.sprite_index = asset_get_index("Fireball");
            i.speed = fireballVel;
            if(playerDirection = "up"){
                i.direction = 90;
                i.image_angle = 0;
            }else if(playerDirection = "down"){
                i.direction = 270;
                i.image_angle = 180;
            }else if(playerDirection = "right"){
                i.direction = 0;
                i.image_angle = 270;
            }else if(playerDirection = "left"){
                i.direction = 180;
                i.image_angle = 90;
            }
            
            i2 = instance_create(obj_player.x, obj_player.y, obj_fireball)
            i2.sprite_index = asset_get_index("Fireball");
            i2.speed = fireballVel;
            i2.image_angle = i.image_angle - 45;
            i2.direction = obj_player.leftDiag;
    
            i3 = instance_create(obj_player.x, obj_player.y, obj_fireball)
            i3.sprite_index = asset_get_index("Fireball");
            i3.speed = fireballVel;
            i3.image_angle = i.image_angle + 45;
            i3.direction = obj_player.rightDiag;
            
            obj_player.numbFireballs +=1;
        }  
        
        if(stance = "curvebow" &amp;&amp; obj_player.numbArrows &lt; 1){
            i = instance_create(obj_player.x, obj_player.y, obj_arrow)
            i.sprite_index = asset_get_index("Arrow_ability");
            i.speed = arrowVel;
            if(playerDirection = "up"){
                i.direction = 90;
                i.image_angle = 0;
            }else if(playerDirection = "down"){
                i.direction = 270;
                i.image_angle = 180;
            }else if(playerDirection = "right"){
                i.direction = 0;
                i.image_angle = 270;
            }else if(playerDirection = "left"){
                i.direction = 180;
                i.image_angle = 90;
            }             
            obj_player.numbArrows +=1;
        } 
        
        if(stance != "sword"){
            sprite_index = asset_get_index("spr_" + string(stance) + "_animation_" + string(playerDirection)); 
            image_speed = 0.5;
        }
    }
    
    }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!menuOpened){
    menuOpened = true;
}
else{
    menuOpened = false;
    script_execute(setSubMenu,0,0,false);
}

script_execute(setMainMenu,menuOpened);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!menuOpened){
    if(cutScene == false){
    
        if(specialAttackTime &gt;= specialAttackCooldownFin){
            specialAttackCooldownIni = specialAttackTime;
            specialAttackCooldownFin = specialAttackTime + specialAttackCooldown;
                
            if (!(keyA &amp;&amp; keyS) &amp;&amp; !(keyA &amp;&amp; keyW) &amp;&amp; !(keyD &amp;&amp; keyS) &amp;&amp; !(keyD &amp;&amp; keyW) &amp;&amp; canUseAbility){
                abilityInt = true;
                attacking = true;
            }
            
            if(abilityInt){
                
                if(stance = "curvebow" &amp;&amp; obj_player.numbArrows &lt; 1){
                    i = instance_create(obj_player.x, obj_player.y, obj_arrow)
                    i.sprite_index = asset_get_index("Arrow_stun");
                    i.speed = arrowVel;
                    if(playerDirection = "up"){
                        i.direction = 90;
                        i.image_angle = 0;
                    }else if(playerDirection = "down"){
                        i.direction = 270;
                        i.image_angle = 180;
                    }else if(playerDirection = "right"){
                        i.direction = 0;
                        i.image_angle = 270;
                    }else if(playerDirection = "left"){
                        i.direction = 180;
                        i.image_angle = 90;
                    }             
                    obj_player.numbArrows +=1; 
                }
                else if(stance == "wand" &amp;&amp; !shieldOn){
                    instance_create(obj_player.x,obj_player.y,obj_player_shield);
                } 
                
                else if(stance == "sword" &amp;&amp; !powerUpOn){
                    obj_player.swordNormalAttack = 2;
                    obj_player.swordAbilityAttack = 6;
                    powerUpOn = true;
                }
                else if(stance == "sword" &amp;&amp; powerUpOn){
                    obj_player.swordNormalAttack = 1;
                    obj_player.swordAbilityAttack = 3;
                    powerUpOn = false;
                }
            }
        }

    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!menuOpened){
    if(cutScene == false){
    
        if(specialAttackTime &gt;= specialAttackCooldownFin){
            specialAttackCooldownIni = specialAttackTime;
            specialAttackCooldownFin = specialAttackTime + specialAttackCooldown;
                
            if (!(keyA &amp;&amp; keyS) &amp;&amp; !(keyA &amp;&amp; keyW) &amp;&amp; !(keyD &amp;&amp; keyS) &amp;&amp; !(keyD &amp;&amp; keyW) &amp;&amp; canUseAbility){
                abilityAgil = true;
                attacking = true;
            }
            
            if(abilityAgil){
                
                if(stance == "curvebow" &amp;&amp; !movementSpeedUp){
                    pixelToMove = 8
                    movementSpeedUp = true;
                }  
                else if(stance == "curvebow" &amp;&amp; movementSpeedUp){
                    pixelToMove = 4
                    movementSpeedUp = false;
                } 
                else if(stance == "wand" &amp;&amp; !attackSpeedUp){
                    attackCooldown = 0.3;
                    specialAttackCooldown = 0.75;
                    attackSpeedUp = true;
                } 
                else if(stance == "wand" &amp;&amp; attackSpeedUp){
                    attackCooldown = 0.5;
                    specialAttackCooldown = 1;
                    attackSpeedUp = false;
                }
                
                else if(stance == "sword"){
                    with instance_create(x,y,obj_sword_hit){
                        image_xscale = obj_player.image_xscale;
                    }
                    obj_sword_hit.sprite_index = asset_get_index("spr_" + string(stance) + "_hit_" + string(playerDirection)); 
                    sprite_index = asset_get_index("spr_" + string(stance) + "_animation_" + string(playerDirection)); 
                    image_speed = 1;
                }
            }
        }

    }
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_idle_walk_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global variable 

//Change stance time variables
changeWepCooldownIni = 0;
changeWepCooldownFin = 0;
changeWepCooldown = 0.2;

//dodge cooldown time variables
dodgeCooldownIni = 0;
dodgeCooldownFin = 0;
dodgeCooldown = 5;
dodgeTime = 0;
dodge = true;

//attack cooldown time variables
attackTime = 0;
attackCooldownIni = 0;
attackCooldownFin = 0;
attackCooldown = 1;
//attack = false;

//stances
countStances = 0;
//stances[0] = "walk";
stances[0] = "sword";
stances[1] = "curvebow";
stances[2] = "wand";
stance = stances[0]

//player variables
realPlayerDirection = "down";
playerDirection = "down";
pointerDirection = "down";
pointerAng = 0;
animationSpeed = 0.4;
talentPoint = 1;
playerLevel = 1;
actualExp = 0;
expMax = 10;
hp = player_hp_default;
invincibility = false;
attacking = false;

//attacking
numbArrows = 0;
numbFireballs = 0;
leftDiag = 0;
rightDiag = 0;
ability = false;

//check double keys
keyW = false;
keyA = false;
keyS = false;
keyD = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//triggered after the player has been hit, reseting his invincibility to false
invincibility = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//playerÂ´s movement

//var img = asset_get_index("spr_walk_animation_" + string(playerDirection));
var time = get_timer()/1000000;
dodgeTime = get_timer()/1000000;
pointerAng = point_direction(obj_player.x,obj_player.y,mouse_x,mouse_y); 

if(keyboard_check(ord("S"))){    
    keyS = true;
    script_execute(Walking,0,2,"down","normal");
}else{keyS=false;}

if(keyboard_check(ord("W"))){
    keyW = true;
    script_execute(Walking,0,-2,"up","normal");
}else{keyW=false;}

if(keyboard_check(ord("A"))){
    keyA=true;
    script_execute(Walking,-2,0,"left","normal");
}else{keyA=false;}

if(keyboard_check(ord("D"))){
   keyD=true;
   script_execute(Walking,2,0,"right","normal");
}else{keyD=false;}

//dodge
if(keyboard_check(ord("Q")) &amp;&amp; dodge = true){
    if(dodgeTime &gt;= dodgeCooldownFin){
        dodgeCooldownIni = dodgeTime;
        dodgeCooldownFin = dodgeTime + dodgeCooldown;
        script_execute(Dodge,obj_player,realPlayerDirection,100)
        dodge = false;
    }
}

//clicar tecla para mudar de stance
if(keyboard_check(ord("R"))){
    if(time &gt;= changeWepCooldownFin){
        changeWepCooldownIni = time;
        changeWepCooldownFin = time + changeWepCooldown; 
        stance = stances[countStances];
        countStances ++;
        if(countStances &gt; (array_length_1d(stances) - 1)) countStances = 0; 
    }
}

if(attacking &amp;&amp; !ability){
    script_execute(Attack,stance,playerDirection);      
}

//trigger attack
if (mouse_check_button_pressed(mb_left) &amp;&amp; !(keyA &amp;&amp; keyS) &amp;&amp; !(keyA &amp;&amp; keyW)
&amp;&amp; !(keyD &amp;&amp; keyS) &amp;&amp; !(keyD &amp;&amp; keyW)){
    attacking = true;
}

//player idle depende de stance para stance
if((!keyboard_check(ord("W"))) &amp;&amp; (!keyboard_check(ord("S"))) &amp;&amp; (!keyboard_check(ord("A"))) &amp;&amp; (!keyboard_check(ord("D")))){ 
    
    script_execute(ImageOrientation);
    playerDirection =  pointerDirection;
    realPlayerDirection = playerDirection;
    if(attacking &amp;&amp; !ability){        
        script_execute(Attack,stance,playerDirection);
    }    
    else{
        sprite_index = asset_get_index("spr_idle_" + string(stance) + "_" + string(playerDirection)); 

    }
} 






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(attacking){
    attacking = false;

    ability = false;
    numbArrows = 0;
    numbFireballs = 0;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!(keyA &amp;&amp; keyS) &amp;&amp; !(keyA &amp;&amp; keyW) &amp;&amp; !(keyD &amp;&amp; keyS) &amp;&amp; !(keyD &amp;&amp; keyW)){
    attacking = true;
    ability = true;
}

if(attacking){
    
    if(stance = "wand" &amp;&amp; obj_player.numbFireballs &lt; 1){
        script_execute(Ability,playerDirection);
        i = instance_create(obj_player.x, obj_player.y, obj_fireball)
        i.sprite_index = asset_get_index("Fireball");
        i.speed = 4;
        if(playerDirection = "up"){
            i.direction = 90;
            i.image_angle = 0;
        }else if(playerDirection = "down"){
            i.direction = 270;
            i.image_angle = 180;
        }else if(playerDirection = "right"){
            i.direction = 0;
            i.image_angle = 270;
        }else if(playerDirection = "left"){
            i.direction = 180;
            i.image_angle = 90;
        }
        
        i2 = instance_create(obj_player.x, obj_player.y, obj_fireball)
        i2.sprite_index = asset_get_index("spr_fireball_" + string(playerDirection));
        i2.speed = 4;
        i2.image_angle = 305;
        i2.direction = obj_player.leftDiag;

        i3 = instance_create(obj_player.x, obj_player.y, obj_fireball)
        i3.sprite_index = asset_get_index("spr_fireball_" + string(playerDirection));
        i3.speed = 4;
        i3.image_angle = 45;
        i3.direction = obj_player.rightDiag;
        
        obj_player.numbFireballs +=1;
    }  
    
    if(stance = "curvebow" &amp;&amp; obj_player.numbArrows &lt; 1){
        i = instance_create(obj_player.x, obj_player.y, obj_arrow)
        i.sprite_index = asset_get_index("Arrow_ability");
        i.speed = 4;
        if(playerDirection = "up"){
            i.direction = 90;
            i.image_angle = 0;
        }else if(playerDirection = "down"){
            i.direction = 270;
            i.image_angle = 180;
        }else if(playerDirection = "right"){
            i.direction = 0;
            i.image_angle = 270;
        }else if(playerDirection = "left"){
            i.direction = 180;
            i.image_angle = 90;
        }             
        obj_player.numbArrows +=1;
    } 
    
    sprite_index = asset_get_index("spr_" + string(stance) + "_animation_" + string(playerDirection)); 
    image_speed = 0.5;

}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_enemy))
    with(obj_enemy)
        instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_idle_walk_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global variable 
changeWepCooldownIni = 0;
changeWepCooldownFin = 0;
changeWepCooldown = 0.2;

countStances = 0;
stances[0] = "walk";
stances[1] = "sword";
stances[2] = "curvebow";
stances[3] = "wand";
stance = stances[0]
playerDirection = "down";
animationSpeed = 0.4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//playerÂ´s movement

var img = asset_get_index("spr_walk_animation_" + string(playerDirection));
var time = get_timer()/1000000;
if(keyboard_check(ord("S"))){    
    script_execute(Walking,0,2,img,"down","normal");
}

if(keyboard_check(ord("W"))){
    script_execute(Walking,0,-2,img,"up","normal");
}

if(keyboard_check(ord("A"))){
    script_execute(Walking,-2,0,img,"left","normal");
}

if(keyboard_check(ord("D"))){
    script_execute(Walking,2,0,img,"right","normal");
}

//clicar tecla para mudar de stance
if(keyboard_check(ord("R"))){
    
    if(time &gt;= changeWepCooldownFin){
        changeWepCooldownIni = time;
        changeWepCooldownFin = time + changeWepCooldown; 
        stance = stances[countStances];
        countStances ++;
        if(countStances &gt; (array_length_1d(stances) - 1)) countStances = 0; 
        
}
}

//player idle depende de stance para stance
if((!keyboard_check(ord("W"))) &amp;&amp; (!keyboard_check(ord("S"))) &amp;&amp; (!keyboard_check(ord("A"))) &amp;&amp; (!keyboard_check(ord("D")))){ 
    
    sprite_index = asset_get_index("spr_idle_" + string(stance) + "_" + string(playerDirection)); 
} 






</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
